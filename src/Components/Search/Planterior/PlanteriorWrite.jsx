import React from "react";
import styled from "styled-components";

import Alert2 from "../../share/modal/Alert2";
import PlaceFilter from "../PlaceFilter";
import AddPostHeader from "../../Community/AddPostHeader";

import { actionCreators as searchActions } from "../../../Redux/Modules/Search";

import { Grid, Image, Input, Text } from "../../../Elements";
import { IoCamera } from "react-icons/io5";
import { TiDelete } from "react-icons/ti";
import { useDispatch, useSelector } from "react-redux";
import { useLocation, useParams } from "react-router-dom";



const PlanteriorWriteComp = () => {
  const dispatch = useDispatch();
  const location = useLocation().pathname.split('/')[2];
  const postId = useParams();

  // const postdata = useSelector((state) => state.post.post);
  const planteriordata = useSelector((state) => state.search?.planterior);

  // alert Î™®Îã¨ open/close
  const [open, setOpen] = React.useState(false);

  const [place, setPlace] = React.useState(null);
  const [message, setMessage] = React.useState(null);

  // props Í¥ÄÎ†® ÏóêÎü¨ Î∞©ÏßÄ
  const [page, setPage] = React.useState(null);

  const fileRef = React.useRef(null);
  const contentRef = React.useRef(null);
  const [file, setFile] = React.useState([]);
  const [preview, setPreview] = React.useState([]);

  const [text, setText] = React.useState();

  // alert Î©îÏÑ∏ÏßÄ 
  const alertMessage = {
    0: "ÏûêÎûëÌï† Í≥µÍ∞ÑÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî!",
    1: "ÎÇ¥Ïö©Ïù¥ ÎπÑÏñ¥ÏûàÏäµÎãàÎã§!",
    2: "Ïù¥ÎØ∏ÏßÄÎ•º ÏóÖÎ°úÎìúÌï¥Ï£ºÏÑ∏Ïöî!",
    3: "Ïù¥ÎØ∏ÏßÄÎäî ÏµúÎåÄ 3Ïû•ÍπåÏßÄ ÏóÖÎ°úÎìú Í∞ÄÎä•Ìï©ÎãàÎã§.",
    4: "Ï¥àÎ°ùÏùÄ ÏïÑÏßÅ 1Ïû•Ïùò Ïù¥ÎØ∏ÏßÄÎßå ÏóÖÎ°úÎìú Í∞ÄÎä•Ìï©ÎãàÎã§üò≠",
    5: "Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌïòÏó¨ Î™©Î°ùÏúºÎ°ú ÎèåÏïÑÍ∞ëÎãàÎã§.",
  }

  // ÏóÖÎ°úÎìúÌïú ÌååÏùº Í∞ÄÏ†∏Ïò§Í∏∞ 
  // Ïù¥ÌõÑ ÏóÖÎ°úÎìú Ïó¨Îü¨Ïû• Í∞ÄÎä•Ìï† Í≤ΩÏö∞ Ï≤´Î≤àÏß∏ Ï°∞Í±¥Î¨∏ Ìï¥Ï†ú
  const onChange = (e) => {
    if (file.length === 2 || e.target.files.length > 1) {
      // ÌååÏùº Í∞ØÏàò 1Í∞ú Ï¥àÍ≥º
      setMessage(4);
      setOpen(true);
      return;
    } else if (file.length === 4 || e.target.files.length > 3) {
      // ÌååÏùº Í∞ØÏàò 3Í∞ú Ï¥àÍ≥º
      setMessage(3);
      setOpen(true);
      return;
    } else if (e.target.files) {
      // ÌååÏùº ÏóÖÎ°úÎìú ÎêêÏùÑ Í≤ΩÏö∞ 
      setFile([e.target.files]);
      // setFile([...file, ...e.target.files]);
    } else {
      // ÏóÖÎ°úÎìú Ï∑®ÏÜå
      setFile([])
      return;
    }

    // ÎØ∏Î¶¨Î≥¥Í∏∞ ÏÑ∏ÌåÖ
    const fileArr = e.target.files;
    let fileURLs = [];
    let filesLength = fileArr.length > 10 ? 10 : fileArr.length;
    let files;

    for (let i = 0; i < filesLength; i++) {
      files = fileArr[i];

      let reader = new FileReader();
      reader.onload = () => {
        fileURLs[i] = reader.result;
        setPreview([fileURLs]);
        // setPreview([...fileURLs]);
      };
      reader.readAsDataURL(files);
    }
  }
  
  // Í≤åÏãúÍ∏Ä Îì±Î°ù
  const submit = () => {
    // Îç∞Ïù¥ÌÑ∞ Ïú†Ìö®ÏÑ± 
    if (place === null) {
      // Ïû•ÏÜå ÏÑ§Ï†ïÌïòÏßÄ ÏïäÏïòÏùÑ Í≤ΩÏö∞
      setMessage(0);
      setOpen(true);
      return;
    } else if (!contentRef) {
      // Í∏Ä ÎÇ¥Ïö©ÏùÑ ÏûëÏÑ±ÌïòÏßÄ ÏïäÏïòÏùÑ Í≤ΩÏö∞
      setMessage(1);
      setOpen(true);
      return;
    } else if (!file) {
      // ÌååÏùºÏù¥ ÏóÜÏùÑ Í≤ΩÏö∞
      setMessage(2);
      setOpen(true);
      return;
    } else if (file.length > 1) {
      // ÌååÏùº Í∞ØÏàòÍ∞Ä 1Í∞úÎ•º Ï¥àÍ≥ºÌï† Í≤ΩÏö∞
      setMessage(4);
      setOpen(true);
      return;
    }
    // ÌèºÎç∞Ïù¥ÌÑ∞ ÏÑ∏ÌåÖ
    const formData = new FormData();
    formData.append('postTitle', null);
    formData.append('postContent', contentRef.current.value);
    formData.append('plantPlaceCode', place);
    formData.append('postTypeCode', 'postType01');
    // Í∏Ä ÏàòÏ†ï Î£®Ìä∏Ïùº Í≤ΩÏö∞
    if (location === 'edit') {
      if (file.length > 0) {
        // ÌååÏùºÏùÑ ÏàòÏ†ïÌñàÏùÑ Í≤ΩÏö∞
        formData.append('postImgUrl', file[0][0]);
        dispatch(searchActions.editPlanteriorPostDB(formData, postId.postId));
        return;
      } else {
        // ÌååÏùº ÏàòÏ†ïÌïòÏßÄ ÏïäÏïòÏùÑ Í≤ΩÏö∞
        formData.append('originalUrl', preview[0]);
        dispatch(searchActions.editPlanteriorPostDB(formData, postId.postId));
        return;
      };
    }
    // Í∏Ä ÏûëÏÑ± Î£®Ìä∏Ïùº Í≤ΩÏö∞
    formData.append('postImgUrl', file[0][0]);
    dispatch(searchActions.writePlanteriorPostDB(formData));
  }


  React.useEffect(() => {
    // if (!planteriordata?.postContent && location === 'edit') {
    //   // Í∏Ä ÎÇ¥Ïö©ÏùÑ Ï∞æÏßÄ Î™ªÌïú Í≤ΩÏö∞
    //   setMessage(5);
    //   setOpen(true);
    //   return
    // } else 
    if (location === 'edit') {
      // Í∏Ä ÏàòÏ†ï Î£®Ìä∏Ïùº Í≤ΩÏö∞ 
      contentRef.current.value = planteriordata?.postContent;
      setPreview([planteriordata?.postImgUrl]);
    }
  }, [])


  return (
    <React.Fragment>

      <Wrapper>
        <AddPostHeader edit title={location === 'edit' ? "Í∏Ä ÏàòÏ†ïÌïòÍ∏∞" : "ÏãùÎ¨º Í≥µÍ∞Ñ Ïò¨Î¶¨Í∏∞"} 
          submit={submit} disable={!text}/>
        <Grid width="100%" height="1px" bg="#E0E0E0"/>
        <Grid width="100%" padding="8px 0 8px 16px">
          <PlaceFilter none setPlace={setPlace} setPage={setPage} />
        </Grid>
        <Grid width="100%" heigth="100%" padding="0 16px">
          <Input type="textarea" placeholder="ÏÇ¨ÏßÑÏóê ÎåÄÌï¥ ÏÑ§Î™ÖÌï¥ Ï£ºÏÑ∏Ïöî." _ref={contentRef} 
            _onChange={(e) => { setText(e.target.value); }}/>
        </Grid>

        <FileWrapper>
          {file?.length > 0 || preview.length > 0 ?
            <FilePreview>
              {preview ?
                preview.map((img, idx) => {
                  return (
                    <ImageBox key={idx}>
                      <Image type="square" size="84px" borderRadius="4px" imgUrl={img} />
                      <IconBox>
                        <TiDelete
                          size="25px" style={{ flex: "none", marginLeft: "-6.5px" }} color="#5F6060"
                          onClick={() => { setFile([]); setPreview([]); }} />
                      </IconBox>
                    </ImageBox>
                  )
                }) :
                <div></div>
              }
            </FilePreview> :
            <div></div>}

          <UploadArea>
            <Grid margin="auto">
              <IoCamera size="25px" color="#8F8F8F" onClick={() => { fileRef.current.click() }} />
              <input
                multiple
                type="file"
                style={{ display: 'none' }}
                accept='image/*'
                ref={fileRef} onChange={onChange}
              />
            </Grid>
            <Grid width="100%" />
            <Grid margin="auto">
              <Text bold size="base" color="#24A148">{file?.length ? file.length : "0"}</Text>
              <Text size="base" color="#6F6F6F">/1</Text>
            </Grid>
          </UploadArea>

        </FileWrapper>
      </Wrapper>
        <Alert2 open={open} setOpen={setOpen} btn1={message === 5 ? "ÌôïÏù∏" : "Í≥ÑÏÜç ÏûëÏÑ±ÌïòÍ∏∞"} error={message === 5 ? '/search' : null}>
        <Text bold wordbreak size="small">
          {alertMessage[message]}
        </Text>
      </Alert2>
    </React.Fragment>
  )
}

const Wrapper = styled.div`
  position:relative;
  width: 100%;
  height: 100%;
  overflow: ${(props) => props.open? 'hidden' : 'auto'};
`

const FileWrapper = styled.div`
  position: fixed;
  bottom: 54px;

  width: 100%;
  height: fit-content;
`


const FilePreview = styled.div`
  display: flex;
  width: 100%;
  height: 116px;

  background: #F4F4F4;
`

const ImageBox = styled.div`
  position: relative;
  margin: 16px 8px 16px 16px;
`

const IconBox = styled.div`
  position: absolute;
  top: -5px;
  right: -4px;

  display: flex;
  align-items: center;

  width: 12px;
  height: 12px;

  border: 1px solid #000;
  border-radius: 12px;
  background: #fff;
`

const UploadArea = styled.div`
  display: grid;
  grid-template-columns: 3fr 10fr 3fr;
  align-items:center;

  width: 100%;
  height: 52px;

  border-top: 1px solid #E0E0E0;
`

export default PlanteriorWriteComp;